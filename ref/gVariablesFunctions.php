<?php

//include("tblAaa.php");
//include("tblBbb.php");
//include("");

$calLastY=date('Y')-18;
$calFirstY=$calLastY-83;
for($i=1;$i<=12;$i++){$calM[]=$i;}
for($i=1;$i<=31;$i++){$calD[]=$i;}
//for($i=$calFirstY;$i<$calLastY;$i++){$calY[]=$i;}
//    echo "$calLastY $calFirstY";
for($i=$calLastY-1;$i>=$calFirstY;$i--){$calY[]=$i;}

$calFirstY1=date('Y');
$calLastY1=date('Y')+80;
//for($i=$calFirstY;$i<$calLastY;$i++){$calY[]=$i;}
for($i=$calFirstY1;$i<=$calLastY1;$i++){$calY1[]=$i;}

// Something like this (taken from the Symphony CMS project):

$transliterations = array(

    // Alphabetical

    '/À/' => 'A',       '/Á/' => 'A',       '/Â/' => 'A',       '/Ã/' => 'A',       '/Ä/' => 'Ae',
    '/Å/' => 'A',       '/A/' => 'A',       '/A/' => 'A',       '/A/' => 'A',       '/Æ/' => 'Ae',
    '/Ç/' => 'C',       '/C/' => 'C',       '/C/' => 'C',       '/C/' => 'C',       '/C/' => 'C',
    '/D/' => 'D',       '/Ð/' => 'D',       '/Ð/' => 'D',       '/È/' => 'E',       '/É/' => 'E',
    '/Ê/' => 'E',       '/Ë/' => 'E',       '/E/' => 'E',       '/E/' => 'E',       '/E/' => 'E',
    '/E/' => 'E',       '/E/' => 'E',       '/G/' => 'G',       '/G/' => 'G',       '/G/' => 'G',
    '/G/' => 'G',       '/H/' => 'H',       '/H/' => 'H',       '/Ì/' => 'I',       '/Í/' => 'I',
    '/Î/' => 'I',       '/Ï/' => 'I',       '/I/' => 'I',       '/I/' => 'I',       '/I/' => 'I',
    '/I/' => 'I',       '/I/' => 'I',       '/?/' => 'Ij',      '/J/' => 'J',       '/K/' => 'K',
    '/L/' => 'L',       '/L/' => 'L',       '/L/' => 'L',       '/L/' => 'L',       '/?/' => 'L',
    '/Ñ/' => 'N',       '/N/' => 'N',       '/N/' => 'N',       '/N/' => 'N',       '/?/' => 'N',
    '/Ò/' => 'O',       '/Ó/' => 'O',       '/Ô/' => 'O',       '/Õ/' => 'O',       '/Ö/' => 'Oe',
    '/Ø/' => 'O',       '/O/' => 'O',       '/O/' => 'O',       '/O/' => 'O',       '/Œ/' => 'Oe',
    '/R/' => 'R',       '/R/' => 'R',       '/R/' => 'R',       '/S/' => 'S',       '/Š/' => 'S',
    '/S/' => 'S',       '/S/' => 'S',       '/?/' => 'S',       '/T/' => 'T',       '/T/' => 'T',
    '/T/' => 'T',       '/?/' => 'T',       '/Ù/' => 'U',       '/Ú/' => 'U',       '/Û/' => 'U',
    '/Ü/' => 'Ue',      '/U/' => 'U',       '/U/' => 'U',       '/U/' => 'U',       '/U/' => 'U',
    '/U/' => 'U',       '/U/' => 'U',       '/W/' => 'W',       '/Ý/' => 'Y',       '/Y/' => 'Y',
    '/Ÿ/' => 'Y',       '/Y/' => 'Y',       '/Z/' => 'Z',       '/Ž/' => 'Z',       '/Z/' => 'Z',
    '/Þ/' => 'T',
    '/à/' => 'a',       '/á/' => 'a',       '/â/' => 'a',       '/ã/' => 'a',       '/ä/' => 'ae',
    '/å/' => 'a',       '/a/' => 'a',       '/a/' => 'a',       '/a/' => 'a',       '/æ/' => 'ae',
    '/ç/' => 'c',       '/c/' => 'c',       '/c/' => 'c',       '/c/' => 'c',       '/c/' => 'c',
    '/d/' => 'd',       '/d/' => 'd',       '/ð/' => 'd',       '/è/' => 'e',       '/é/' => 'e',
    '/ê/' => 'e',       '/ë/' => 'e',       '/e/' => 'e',       '/e/' => 'e',       '/e/' => 'e',
    '/e/' => 'e',       '/e/' => 'e',       '/g/' => 'g',       '/g/' => 'g',       '/g/' => 'g',
    '/g/' => 'g',       '/h/' => 'h',       '/h/' => 'h',       '/ì/' => 'i',       '/í/' => 'i',
    '/î/' => 'i',       '/ï/' => 'i',       '/i/' => 'i',       '/i/' => 'i',       '/i/' => 'i',
    '/i/' => 'i',       '/i/' => 'i',       '/?/' => 'ij',      '/j/' => 'j',       '/k/' => 'k',
    '/l/' => 'l',       '/l/' => 'l',       '/l/' => 'l',       '/l/' => 'l',       '/?/' => 'l',
    '/ñ/' => 'n',       '/n/' => 'n',       '/n/' => 'n',       '/n/' => 'n',       '/?/' => 'n',
    '/ò/' => 'o',       '/ó/' => 'o',       '/ô/' => 'o',       '/õ/' => 'o',       '/ö/' => 'oe',
    '/ø/' => 'o',       '/o/' => 'o',       '/o/' => 'o',       '/o/' => 'o',       '/œ/' => 'oe',
    '/r/' => 'r',       '/r/' => 'r',       '/r/' => 'r',       '/s/' => 's',       '/š/' => 's',
    '/s/' => 's',       '/s/' => 's',       '/?/' => 's',       '/t/' => 't',       '/t/' => 't',
    '/t/' => 't',       '/?/' => 't',       '/ù/' => 'u',       '/ú/' => 'u',       '/û/' => 'u',
    '/ü/' => 'ue',      '/u/' => 'u',       '/u/' => 'u',       '/u/' => 'u',       '/u/' => 'u',
    '/u/' => 'u',       '/u/' => 'u',       '/w/' => 'w',       '/ý/' => 'y',       '/y/' => 'y',
    '/ÿ/' => 'y',       '/y/' => 'y',       '/z/' => 'z',       '/ž/' => 'z',       '/z/' => 'z',
    '/þ/' => 't',       '/ß/' => 'ss',      '/?/' => 'ss',      '/ƒ/' => 'f',       '/?/' => 'k',
    '/?/' => 'n',

    // Symbolic

    '/\(/' => null,     '/\)/' => null,     '/,/' => null,
    '/–/' => '-',       '/-/' => '-',       '/„/' => '"',
    '/“/' => '"',       '/”/' => '"',       '/—/' => '-',
    '/¿/' => null,      '/?/' => null,      '/¡/' => null,

    // Ampersands

    '/©/' => 'c',
    '/^&(?!&)$/' => 'and',
    '/^&(?!&)/' => 'and-',
    '/&(?!&)&/' => '-and',
    '/&(?!&)/' => '-and-',

);

$ts = array("/[À-Å]/","/Æ/","/Ç/","/[È-Ë]/","/[Ì-Ï]/","/Ð/","/Ñ/","/[Ò-ÖØ]/","/×/","/[Ù-Ü]/","/[Ý-ß]/","/[à-å]/","/æ/","/ç/","/[è-ë]/","/[ì-ï]/","/ð/","/ñ/","/[ò-öø]/","/÷/","/[ù-ü]/","/[ý-ÿ]/");
$tn = array("A","AE","C","E","I","D","N","O","X","U","Y","a","ae","c","e","i","d","n","o","x","u","y");

function toASCII( $str ) {
    return strtr(utf8_decode($str),
           utf8_decode( 'ŠŒŽšœžŸ¥µÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿ'), 'SOZsozYYuAAAAAAACEEEEIIIIDNOOOOOOUUUUYsaaaaaaaceeeeiiiionoooooouuuuyy'
           );
}

function transliterateString($txt){
    $transliterationTable = array('á' => 'a', 'Á' => 'A', 'à' => 'a', 'À' => 'A', 'a' => 'a', 'A' => 'A', 'â' => 'a', 'Â' => 'A', 'å' => 'a', 'Å' => 'A', 'ã' => 'a', 'Ã' => 'A', 'a' => 'a', 'A' => 'A', 'a' => 'a', 'A' => 'A', 'ä' => 'ae', 'Ä' => 'AE', 'æ' => 'ae', 'Æ' => 'AE', '?' => 'b', '?' => 'B', 'c' => 'c', 'C' => 'C', 'c' => 'c', 'C' => 'C', 'c' => 'c', 'C' => 'C', 'c' => 'c', 'C' => 'C', 'ç' => 'c', 'Ç' => 'C', 'd' => 'd', 'D' => 'D', '?' => 'd', '?' => 'D', 'd' => 'd', 'Ð' => 'D', 'ð' => 'dh', 'Ð' => 'Dh', 'é' => 'e', 'É' => 'E', 'è' => 'e', 'È' => 'E', 'e' => 'e', 'E' => 'E', 'ê' => 'e', 'Ê' => 'E', 'e' => 'e', 'E' => 'E', 'ë' => 'e', 'Ë' => 'E', 'e' => 'e', 'E' => 'E', 'e' => 'e', 'E' => 'E', 'e' => 'e', 'E' => 'E', '?' => 'f', '?' => 'F', 'ƒ' => 'f', 'ƒ' => 'F', 'g' => 'g', 'G' => 'G', 'g' => 'g', 'G' => 'G', 'g' => 'g', 'G' => 'G', 'g' => 'g', 'G' => 'G', 'h' => 'h', 'H' => 'H', 'h' => 'h', 'H' => 'H', 'í' => 'i', 'Í' => 'I', 'ì' => 'i', 'Ì' => 'I', 'î' => 'i', 'Î' => 'I', 'ï' => 'i', 'Ï' => 'I', 'i' => 'i', 'I' => 'I', 'i' => 'i', 'I' => 'I', 'i' => 'i', 'I' => 'I', 'j' => 'j', 'J' => 'J', 'k' => 'k', 'K' => 'K', 'l' => 'l', 'L' => 'L', 'l' => 'l', 'L' => 'L', 'l' => 'l', 'L' => 'L', 'l' => 'l', 'L' => 'L', '?' => 'm', '?' => 'M', 'n' => 'n', 'N' => 'N', 'n' => 'n', 'N' => 'N', 'ñ' => 'n', 'Ñ' => 'N', 'n' => 'n', 'N' => 'N', 'ó' => 'o', 'Ó' => 'O', 'ò' => 'o', 'Ò' => 'O', 'ô' => 'o', 'Ô' => 'O', 'o' => 'o', 'O' => 'O', 'õ' => 'o', 'Õ' => 'O', 'ø' => 'oe', 'Ø' => 'OE', 'o' => 'o', 'O' => 'O', 'o' => 'o', 'O' => 'O', 'ö' => 'oe', 'Ö' => 'OE', '?' => 'p', '?' => 'P', 'r' => 'r', 'R' => 'R', 'r' => 'r', 'R' => 'R', 'r' => 'r', 'R' => 'R', 's' => 's', 'S' => 'S', 's' => 's', 'S' => 'S', 'š' => 's', 'Š' => 'S', '?' => 's', '?' => 'S', 's' => 's', 'S' => 'S', '?' => 's', '?' => 'S', 'ß' => 'SS', 't' => 't', 'T' => 'T', '?' => 't', '?' => 'T', 't' => 't', 'T' => 'T', '?' => 't', '?' => 'T', 't' => 't', 'T' => 'T', 'ú' => 'u', 'Ú' => 'U', 'ù' => 'u', 'Ù' => 'U', 'u' => 'u', 'U' => 'U', 'û' => 'u', 'Û' => 'U', 'u' => 'u', 'U' => 'U', 'u' => 'u', 'U' => 'U', 'u' => 'u', 'U' => 'U', 'u' => 'u', 'U' => 'U', 'u' => 'u', 'U' => 'U', 'u' => 'u', 'U' => 'U', 'ü' => 'ue', 'Ü' => 'UE', '?' => 'w', '?' => 'W', '?' => 'w', '?' => 'W', 'w' => 'w', 'W' => 'W', '?' => 'w', '?' => 'W', 'ý' => 'y', 'Ý' => 'Y', '?' => 'y', '?' => 'Y', 'y' => 'y', 'Y' => 'Y', 'ÿ' => 'y', 'Ÿ' => 'Y', 'z' => 'z', 'Z' => 'Z', 'ž' => 'z', 'Ž' => 'Z', 'z' => 'z', 'Z' => 'Z', 'þ' => 'th', 'Þ' => 'Th', 'µ' => 'u', '?' => 'a', '?' => 'a', '?' => 'b', '?' => 'b', '?' => 'v', '?' => 'v', '?' => 'g', '?' => 'g', '?' => 'd', '?' => 'd', '?' => 'e', '?' => 'e', '?' => 'e', '?' => 'e', '?' => 'zh', '?' => 'zh', '?' => 'z', '?' => 'z', '?' => 'i', '?' => 'i', '?' => 'j', '?' => 'j', '?' => 'k', '?' => 'k', '?' => 'l', '?' => 'l', '?' => 'm', '?' => 'm', '?' => 'n', '?' => 'n', '?' => 'o', '?' => 'o', '?' => 'p', '?' => 'p', '?' => 'r', '?' => 'r', '?' => 's', '?' => 's', '?' => 't', '?' => 't', '?' => 'u', '?' => 'u', '?' => 'f', '?' => 'f', '?' => 'h', '?' => 'h', '?' => 'c', '?' => 'c', '?' => 'ch', '?' => 'ch', '?' => 'sh', '?' => 'sh', '?' => 'sch', '?' => 'sch', '?' => '', '?' => '', '?' => 'y', '?' => 'y', '?' => '', '?' => '', '?' => 'e', '?' => 'e', '?' => 'ju', '?' => 'ju', '?' => 'ja', '?' => 'ja');
    $txt = str_replace(array_keys($transliterationTable), array_values($transliterationTable), $txt); return $txt;
}

/*
On <form> page: <form ...  accept-charset='UTF-8'>
On processAaaBbb.php pages
include('includes/gVariablesFunctions.php');
//foreach ($_POST as $key => $value) {$_POST[$key]=utf8_encode($value);}
NOTE: str_replace($SPECIAL_CHARACTERS_SQL,"&#39;",htmlspecialchars($value)) MUST be before htmlentities and html_entity_decode.
foreach ($_POST as $key => $value) {$_POST[$key]=str_replace($SPECIAL_CHARACTERS_SQL,"&#39;",htmlspecialchars($value));}
foreach ($_POST as $key => $value) {$_POST[$key]=htmlentities($value, ENT_QUOTES, "UTF-8");}
foreach ($_POST as $key => $value) {$_POST[$key]=html_entity_decode($value);}
foreach ($_POST as $key => $value) {$_POST[$key]=transliterateString($value);}
//foreach ($_POST as $key => $value) {echo "$value<br />";}
//$string="Sautéed";echo transliterateString($string);
//exit();

*/

?>